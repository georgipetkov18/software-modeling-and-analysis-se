CREATE DATABASE VsCodeDB;
USE VsCodeDB;

CREATE TABLE TOOL(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	NAME VARCHAR(255) NOT NULL,
	SHORTCUT VARCHAR(50) NULL,
)

CREATE TABLE EXTERNAL_LOGIN_PROVIDER(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	NAME VARCHAR(255) NOT NULL UNIQUE,
	URL VARCHAR(300) NOT NULL,
);

CREATE TABLE [USER](
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	EMAIL VARCHAR(255) NOT NULL UNIQUE,
	USERNAME VARCHAR(100) NOT NULL
	FIRST_NAME VARCHAR(100) NULL,
	LAST_NAME VARCHAR(100) NULL,
	REGISTERED_ON DATETIME NOT NULL,
	IS_ACTIVE BIT NOT NULL,
	EXTERNAL_LOGIN_PROVIDER_ID UNIQUEIDENTIFIER NULL
	FOREIGN KEY (EXTERNAL_LOGIN_PROVIDER_ID) REFERENCES EXTERNAL_LOGIN_PROVIDER(ID)
)

CREATE TABLE FILE_EXTENSION(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	EXTENSION_NAME VARCHAR(255) NOT NULL,
	EXTENSION_ABBREVIATION VARCHAR(10) NOT NULL,
	ICON BINARY NULL
)

CREATE TABLE WORKSPACE(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	IS_RESTRICTED BIT NOT NULL,
	BACKGROUND_MODE VARCHAR(15) NOT NULL CHECK (BACKGROUND_MODE IN ('DARK', 'LIGHT')),
	USER_ID UNIQUEIDENTIFIER NULL,
	FOREIGN KEY (USER_ID) REFERENCES [USER](ID),
)

CREATE TABLE TOOL_WORKSPACE(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	TOOL_ID UNIQUEIDENTIFIER NOT NULL,
	WORKSPACE_ID UNIQUEIDENTIFIER NOT NULL,
	FOREIGN KEY (TOOL_ID) REFERENCES TOOL(ID),
	FOREIGN KEY (WORKSPACE_ID) REFERENCES WORKSPACE(ID),
)

CREATE TABLE EXTENSION (
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	NAME VARCHAR(MAX) NOT NULL,
	SIZE_MB DECIMAL(4,2) NOT NULL,
)

CREATE TABLE WORKSPACE_EXTENSION(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	WORKSPACE_ID UNIQUEIDENTIFIER NOT NULL,
	EXTENSION_ID UNIQUEIDENTIFIER NOT NULL,
	FOREIGN KEY (WORKSPACE_ID) REFERENCES WORKSPACE(ID),
	FOREIGN KEY (EXTENSION_ID) REFERENCES EXTENSION(ID),
)

CREATE TABLE USER_EXTENSION(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	USER_ID UNIQUEIDENTIFIER NOT NULL,
	EXTENSION_ID UNIQUEIDENTIFIER NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES [USER](ID),
	FOREIGN KEY (EXTENSION_ID) REFERENCES EXTENSION(ID),
)

CREATE TABLE PROJECT(
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	NAME VARCHAR(255) NOT NULL,
	WORKSPACE_ID UNIQUEIDENTIFIER NOT NULL,
	FOREIGN KEY (WORKSPACE_ID) REFERENCES WORKSPACE(ID),
)

CREATE TABLE [FILE](
	ID UNIQUEIDENTIFIER PRIMARY KEY,
	NAME VARCHAR(255) NOT NULL,
	CREATED_ON DATETIME NOT,
	MODIFIED_ON DATETIME NOT,
	LOCATION VARCHAR(MAX) NULL,
	SIZE_MB DECIMAL(4,2) NOT NULL,
	FILE_EXTENSION_ID UNIQUEIDENTIFIER NULL,
	PROJECT_ID UNIQUEIDENTIFIER NULL,
	FOREIGN KEY (FILE_EXTENSION_ID) REFERENCES FILE_EXTENSION(ID),
	FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID),
)


CREATE FUNCTION GET_LOGGEDIN_USERS_COUNT(@externalLoginProviderId UNIQUEIDENTIFIER)
RETURNS INT
AS 
BEGIN

DECLARE @RES INT;
SELECT @RES = COUNT(U.ID) FROM [USER] U JOIN EXTERNAL_LOGIN_PROVIDER ELP
ON U.EXTERNAL_LOGIN_PROVIDER_ID = ELP.ID

RETURN @RES
END

CREATE TRIGGER ADD_FILE_HISTORY_DATA 
ON [FILE]
INSTEAD OF INSERT
AS
BEGIN

DECLARE @ID UNIQUEIDENTIFIER;
DECLARE @NAME VARCHAR(255);
DECLARE @LOCATION VARCHAR(MAX);
DECLARE @SIZE_MB DECIMAL(4,2);
DECLARE @FILE_EXTENSION_ID UNIQUEIDENTIFIER;
DECLARE @PROJECT_ID UNIQUEIDENTIFIER;

SELECT 
@ID = ID, @NAME = NAME, @LOCATION = LOCATION, 
@SIZE_MB = SIZE_MB, @FILE_EXTENSION_ID = FILE_EXTENSION_ID, @PROJECT_ID = PROJECT_ID
FROM INSERTED

INSERT INTO [FILE] (ID, NAME, CREATED_ON, MODIFIED_ON, LOCATION, SIZE_MB, FILE_EXTENSION_ID, PROJECT_ID)
VALUES(@ID, @NAME, GETDATE(), GETDATE(), @LOCATION, @SIZE_MB, @FILE_EXTENSION_ID, @PROJECT_ID)

END

CREATE PROCEDURE LOGIN_USER 
@Email VARCHAR(255), 
@Username VARCHAR(100),
@FirstName VARCHAR(100), 
@LastName VARCHAR(100), 
@ExternalProvider VARCHAR(255)
AS

DECLARE @providerId UNIQUEIDENTIFIER
SELECT TOP 1 @providerId = ID from EXTERNAL_LOGIN_PROVIDER WHERE NAME = @ExternalProvider;

INSERT INTO [USER] (ID, EMAIL, USERNAME, FIRST_NAME, LAST_NAME, REGISTERED_ON, IS_ACTIVE, EXTERNAL_LOGIN_PROVIDER_ID)
VALUES(NEWID(), @Email, @Username, @FirstName, @LastName, GETDATE(), 1, @providerId);


